#!/bin/sh

# Copyright (c) 2012 Benjamin Althues <benjamin@babab.nl>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

VERSIONSTR="Projectpad v1.0"
EXECNAME=$(basename "$0")

if [ -n "${XDG_CONFIG_HOME}" ]; then
    FILEROOT="${XDG_CONFIG_HOME}/projectpad"
else
    FILEROOT="${HOME}/.projectpad"
fi

DIALOG=$(which dialog)
if [ $? -gt 0 ]; then
    echo "Error: Could not find the 'dialog' program"
    exit 1
fi

if [ ! -d "${FILEROOT}" ]; then
    mkdir -p "${FILEROOT}"
fi
if [ ! -f "${FILEROOT}/projects" ]; then
    touch "${FILEROOT}/projects"
fi

if [ -f "${FILEROOT}/projects" ]; then
    PROJECTS="$(cat ${FILEROOT}/projects)"
else
    echo "Error: could not find file '${FILEROOT}/projects'"
    exit 2
fi

usage()
{
    echo "USAGE: ${EXECNAME} [options]"
    echo
    echo "Set an alias to quickly change to project path, like so:"
    echo "    alias gotoproject='cd \`${EXECNAME} --get\`'"
    echo
    echo "Options:"
    echo "-h, --help    Show this help:"
    echo "-e, --edit    Edit project file with \$EDITOR"
    echo "-g, --get     Get current project path"
    echo "-s, --set     Set current project"
}

choice()
{
    if [ -n "${PROJECTS}" ]; then
        ${DIALOG} \
            --backtitle "${VERSIONSTR}" \
            --cancel-label "Exit" \
            --menu "Project list" 0 0 0 $PROJECTS \
            2> "${FILEROOT}/current"
    else
        echo "File '${FILEROOT}/projects' is empty."
        echo "You can edit it by using '${EXECNAME} --edit'"
    fi
}

if [ ! "$1" ]; then
    choice
    exit
fi

case "$1" in
    "-h" | "--help")
        usage
        ;;
    "-s" | "--set")
        choice
        ;;
    "-g" | "--get")
        if [ -f "${FILEROOT}/current" ]; then
            PROJECT=$(cat "${FILEROOT}/current")
        else
            echo "${HOME}"
            exit 2
        fi
        if [ -d "${PROJECT}" ]; then
            echo "${PROJECT}"
        else
            echo "${HOME}"
            exit 2
        fi
        ;;
    "-e" | "--edit")
        if [ -z "${EDITOR}" ]; then
            echo "Error: environment var '\$EDITOR' is not set"
            exit 2
        fi
        ${EDITOR} "${FILEROOT}/projects"
        ;;
esac
